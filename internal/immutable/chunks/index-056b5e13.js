import{S as g,i as _,s as y,ac as d,l as P,m as w,p as E,h,q as m,b as S,n as p,U as b,k as q}from"./index-63d179ed.js";import{t as r}from"./MeCard-954f0439.js";import"./Face-8d009a19.js";import"./IconBase-35237b9e.js";import"./FaEnvelope-c9851864.js";import"./preload-helper-30e8f224.js";function v(o){let t;return{c(){t=P("div"),this.h()},l(e){t=w(e,"DIV",{id:!0}),E(t).forEach(h),this.h()},h(){m(t,"id",o[0])},m(e,s){S(e,t,s)},p(e,[s]){s&1&&m(t,"id",e[0])},i:p,o:p,d(e){e&&h(t)}}}const I="particlesLoaded";function C(o,t,e){let{options:s={}}=t,{url:l=""}=t,{id:n="tsparticles"}=t,{particlesInit:c}=t;const u=b();let f=n;return q(async()=>{if(r.init(),c&&await c(r),f){const i=r.dom().find(a=>a.id===f);i&&i.destroy()}if(n){const i=x=>{u(I,{particles:x}),f=n};let a;if(l)a=await r.loadJSON(n,l);else if(s)a=await r.load(n,s);else{console.error("You must specify options or url to load tsParticles");return}i(a)}else u(I,{particles:void 0})}),o.$$set=i=>{"options"in i&&e(1,s=i.options),"url"in i&&e(2,l=i.url),"id"in i&&e(0,n=i.id),"particlesInit"in i&&e(3,c=i.particlesInit)},[n,s,l,c]}class D extends g{constructor(t){super(),_(this,t,C,v,y,{options:1,url:2,id:0,particlesInit:3})}get options(){return this.$$.ctx[1]}set options(t){this.$$set({options:t}),d()}get url(){return this.$$.ctx[2]}set url(t){this.$$set({url:t}),d()}get id(){return this.$$.ctx[0]}set id(t){this.$$set({id:t}),d()}get particlesInit(){return this.$$.ctx[3]}set particlesInit(t){this.$$set({particlesInit:t}),d()}}const V=D;export{V as default};
