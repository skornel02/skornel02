import{S as x,i as _,s as v,ac as d,e as y,c as P,a as w,d as h,b as m,g as E,n as p,R as S,v as b}from"./index-df60f785.js";import{t as r}from"./me@min-a65f8a3f.js";import"./Face-f7aea7a5.js";import"./Image-974178cf.js";import"./preload-helper-e51e4937.js";function C(c){let t;return{c(){t=y("div"),this.h()},l(e){t=P(e,"DIV",{id:!0}),w(t).forEach(h),this.h()},h(){m(t,"id",c[0])},m(e,s){E(e,t,s)},p(e,[s]){s&1&&m(t,"id",e[0])},i:p,o:p,d(e){e&&h(t)}}}const I="particlesLoaded";function D(c,t,e){let{options:s={}}=t,{url:l=""}=t,{id:a="tsparticles"}=t,{particlesInit:o}=t;const u=S();let f=a;return b(async()=>{if(r.init(),o&&await o(r),f){const i=r.dom().find(n=>n.id===f);i&&i.destroy()}if(a){const i=g=>{u(I,{particles:g}),f=a};let n;if(l)n=await r.loadJSON(a,l);else if(s)n=await r.load(a,s);else{console.error("You must specify options or url to load tsParticles");return}i(n)}else u(I,{particles:void 0})}),c.$$set=i=>{"options"in i&&e(1,s=i.options),"url"in i&&e(2,l=i.url),"id"in i&&e(0,a=i.id),"particlesInit"in i&&e(3,o=i.particlesInit)},[a,s,l,o]}class L extends x{constructor(t){super(),_(this,t,D,C,v,{options:1,url:2,id:0,particlesInit:3})}get options(){return this.$$.ctx[1]}set options(t){this.$$set({options:t}),d()}get url(){return this.$$.ctx[2]}set url(t){this.$$set({url:t}),d()}get id(){return this.$$.ctx[0]}set id(t){this.$$set({id:t}),d()}get particlesInit(){return this.$$.ctx[3]}set particlesInit(t){this.$$set({particlesInit:t}),d()}}var U=L;export{U as default};
